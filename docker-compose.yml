version: "3.7"

services:

  db:
    image: postgres:alpine
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      # volume for data storage
      - postgres-data:/var/lib/postgresql/data
      # volume with db initial scripts when db doesn't exist yet
      - ./scripts:/docker-entrypoint-initdb.d

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    networks:
      - kafka-net

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - kafka-net

  server-go:
    build:
      context: ./server-go
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "8080:8080"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - kafka
    networks:
      - kafka-net
    volumes:
      - ./server-go:/app

  server-node:
    build:
      context: ./server-node
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - kafka
    networks:
      - kafka-net
    volumes:
      - ./server-node:/app

volumes:
  postgres-data:

networks:
  kafka-net:
    driver: bridge